<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui">
<h:head>
</h:head>

<h:body>

      <p:importEnum type="br.com.roberto.studyjsf.model.enuns.Turno"
                    var="Turno" allSuffix="ALL_ENUM_VALUES" />

      <!-- Maneiras de chamar os beans -->
      <h:outputLabel value=" world"/><br/>
      <h:outputLabel value="#{estudanteRegistrarBean.estudante.nome}"/><br/>
      <h:outputLabel value="#{estudanteRegistrarBean.estudante['sobrenome']}"/><br/>
      <h:outputLabel value="#{estudanteRegistrarBean.estudante['nome']}"/><br/>

      <!-- Maneiras de realizar comparações com EL -->
      <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 eq estudanteRegistrarBean.estudante.nota2 }"/><br/>
      <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 == estudanteRegistrarBean.estudante.nota2 }"/><br/>
estudante.
      <!-- ao usar && não esquecer que tem que colocar o caractere de escape &amp;&amp; -->
      <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 eq estudanteRegistrarBean.estudante.nota2 and
                              estudanteRegistrarBean.estudante.nome.equals('Carlos')}"/><br/>

      <h:outputText value="Comparação de Notas" /><br/>
      <!-- le less or equal -->
      <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 le estudanteRegistrarBean.estudante.nota2 }"/><br/>

      <!-- Operação Ternária -->
      <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 eq 0 ? 'Zero' : estudanteRegistrarBean.estudante.nota1 }"/><br/>

      <!-- Gernando Atribuição não funciona Para passar no bean apenas pontuar aqui-->
      <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 = 22 }"/><br/>
      <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 }"/><br/>

      <h:outputLabel value="#{estudanteRegistrarBean.estudante.nome += 'Alugma coisa' }"/><br/>
      <h:outputLabel value="#{estudanteRegistrarBean.estudante.nome }"/><br/>

      <!-- Palavras Reservadas do Expression Language
         and, or, not !, ne, lt, gt, le, ge, true, false, null, instanceof, empty, not empty, div, mod
      -->

      <h:outputText value="Usando a Enumeração com comparação sem primefaces" /><br/>
      <h:outputLabel value="#{estudanteRegistrarBean.estudante.turno}"/><br/>
      <h:outputLabel value="#{estudanteRegistrarBean.estudante.turno eq 'MATUTINO'}"/><br/>

      <h:outputText value="Usando a Enumeração com comparação usando primefacaes Objeto Enum ao inves de uma String" /><br/>
      <h:outputLabel value="#{estudanteRegistrarBean.estudante.turno.equals(Turno.MATUTINO)}"/><br/>
      <h:outputLabel value="#{estudanteRegistrarBean.estudante.turno.equals(Turno.VESPERTINO)}"/><br/>

      <!-- Trabalhando com Arrays -->
      <h:outputLabel value="#{estudanteRegistrarBean.nomes[0]}"/>
      <h:outputLabel value="#{estudanteRegistrarBean.nomes[1]}"/>
      <h:outputLabel value="#{estudanteRegistrarBean.nomes[2]}"/><br/>

      <!-- Iterando com os Arrays  ui:repeat-->
      <ui:repeat value="#{estudanteRegistrarBean.nomes}" var="nome">
            <h:outputLabel value="#{nome}"/><br/>
      </ui:repeat>

      <!-- Iterando com as Listas  ui:repeat-->
      <h:outputLabel value="#{estudanteRegistrarBean.nomesFemininos.get(0)}"/>
      <h:outputLabel value="#{estudanteRegistrarBean.nomesFemininos.get(1)}"/>
      <h:outputLabel value="#{estudanteRegistrarBean.nomesFemininos.get(2)}"/><br/>

      <!-- Iterando com os Arrays  ui:repeat-->
      <ui:repeat value="#{estudanteRegistrarBean.nomesFemininos}" var="nomeF">
            <h:outputLabel value="#{nomeF}"/><br/>
      </ui:repeat>

      <!-- Iterando com Set  Para versões anteriores tem que colocar um set com o toArray-->
      <ui:repeat value="#{estudanteRegistrarBean.nomesSet}" var="nomeSet">
            <h:outputLabel value="#{nomeSet}"/><br/>
      </ui:repeat>

      <!-- Iterando com Map  Para versões anteriores tem que colocar um set com o toArray-->
      <h:outputLabel value="MAP"/><br/>
      <h:outputLabel value="#{estudanteRegistrarBean.nomesMap.get('Goku')}"/><br/>
      <h:outputLabel value="#{estudanteRegistrarBean.nomesMap.get('One Piece')}"/><br/>

      <!-- Para essa versão do JSF não funcionou
      <ui:repeat value="#{estudanteRegistrarBean.nomesMap.entrySet()}" var="entry">
            <h:outputLabel value="#{entry.key}"/><br/>
            <h:outputLabel value="#{entry.value}"/><br/>

      </ui:repeat>
      -->
      #{estudanteRegistrarBean.executar()}
      #{estudanteRegistrarBean.executar(estudanteRegistrarBean.estudante.nome)}
      #{estudanteRegistrarBean.executar(estudanteRegistrarBean.executarRetorno(estudanteRegistrarBean.estudante.sobrenome))}

      <h:form>
            <h:commandButton value="ir para proxima Pagina"
                             actionListener="#{estudanteRegistrarBean.irParaIndex2()}"/>
            <!-- Passando valores em EL para funções JS -->
            <h:commandButton value="Soltar Magia" onclick="fazerMagica('Hadouken')" />
            <h:commandButton value="Nome" onclick="alertaNome('#{estudanteRegistrarBean.estudante.nome}')" />
      </h:form>

      <ui:repeat value="#{estudanteRegistrarBean.nomesFemininos}" var="nome" varStatus="status">

            <h:outputLabel value="#{nome}" style="color: #{status.index mod 2 == 0 ? 'red' : 'green'}"/><br/>
      </ui:repeat>

      <!-- Manipulando Exibição com Rendered e Ajax -->
      <h:form id="form">
            <br/>
            <h:commandButton value="Exibir Notas" >
                  <f:ajax render="notasGrid" listener="${estudanteRegistrarBean.exibirNotas()}"/>
            </h:commandButton>

            <h:commandButton value="Esconder Notas" >
                  <f:ajax render="notasGrid" listener="${estudanteRegistrarBean.esconderNotas()}"/>
            </h:commandButton>


            <br/>
            <h:panelGrid id="notasGrid">
                  <h:outputLabel value="#{estudanteRegistrarBean.estudante.nome}" />;
                  <h:outputLabel value="#{estudanteRegistrarBean.estudante.sobrenome}" />;
                  <h:outputLabel value="#{estudanteRegistrarBean.estudante.turno}" />;

                  <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1}" rendered="#{estudanteRegistrarBean.mostrarNotas}"/>;
                  <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota2}" rendered="#{estudanteRegistrarBean.mostrarNotas}"/>;
                  <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota3}" rendered="#{estudanteRegistrarBean.mostrarNotas}"/>;
            </h:panelGrid>
            <br/>
            <h:commandButton value="Exibir Link" >
                  <f:ajax render="pgLink" listener="${estudanteRegistrarBean.exibirLink()}"/>
            </h:commandButton>

            <h:commandButton value="Esconder link" >
                  <f:ajax render="pgLink" listener="${estudanteRegistrarBean.esconderLink()}"/>
            </h:commandButton>

            <h:panelGroup id="pgLink">
                  <ui:fragment id="fragmentLink" rendered="#{estudanteRegistrarBean.mostrarLink}">
                        <a href="http://www.google.com.br" target="_blank">www.google.com.br</a>
                  </ui:fragment>
            </h:panelGroup>

      </h:form>

      <!-- Expression Language Trabalhando com Lambda -->
      #{(soma -> soma  + num)(10)}<br/>
      #{((v1,v2,v3) -> v1*v2*v3)(1,5,10)}<br/>
      #{(x->x*x*x)(2)}<br/>
      #{cubo=(x->x*x*x); cubo(10)}<br/>

      <!-- Passando EL para o Bean -->
      <h:form>
            <h:commandButton value="Calcular Cubo" >
                  <f:actionListener="${estudanteRegistrarBean.calcularCubo((x->x*x*x),10)}" />
            </h:commandButton>
      </h:form>

      <!--
      Continuar a partir dos 9:30
            https://www.youtube.com/watch?v=GI_6XQzrVic&list=PL62G310vn6nHSNpACkELWiPlM8J8z8t5J&index=12
      -->




</h:body>

<script type="text/javascript">
      function fazerMagica(magica){
            alert(magica);
      }

      function alertaNome(nome){
            alert(nome);
      }
</script>

</html>